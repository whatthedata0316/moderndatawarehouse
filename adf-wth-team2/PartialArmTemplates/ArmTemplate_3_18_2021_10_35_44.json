{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-wth-team2"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_loading_dimensions')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LoadingDimCountry",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow_load_country",
								"type": "DataFlowReference",
								"datasetParameters": {
									"StageCountry": {
										"SchemaName": "STAGE",
										"TableName": "vw_Country"
									},
									"DimCountry": {
										"SchemaName": "DW",
										"TableName": "DimCountry"
									},
									"DimCountryDestination": {
										"SchemaName": "DW",
										"TableName": "DimCountry"
									}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "LS_AzureDataLakeStorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "raw/Polybase"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "LoadingDimPolicy",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow_load_policy",
								"type": "DataFlowReference",
								"datasetParameters": {
									"StageCountry": {
										"SchemaName": "STAGE",
										"TableName": "VW_Policies"
									},
									"DimCountry": {
										"SchemaName": "DW",
										"TableName": "DimPolicies"
									},
									"DimCountryDestination": {
										"SchemaName": "DW",
										"TableName": "DimPolicies"
									}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "LS_AzureDataLakeStorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "raw/Polybase"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "LoadingDimDates",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow_load_date",
								"type": "DataFlowReference",
								"datasetParameters": {
									"StageDate": {
										"SchemaName": "STAGE",
										"TableName": "vw_Dates"
									},
									"DimDate": {
										"SchemaName": "DW",
										"TableName": "DimDates"
									},
									"DimDateDest": {
										"SchemaName": "DW",
										"TableName": "DimDates"
									}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "LS_AzureDataLakeStorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "raw/Polybase"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "wth-team2"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow_load_date')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_load_date')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "wth-team2"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_AzureSynapse",
								"type": "DatasetReference"
							},
							"name": "StageDate"
						},
						{
							"dataset": {
								"referenceName": "DS_AzureSynapse",
								"type": "DatasetReference"
							},
							"name": "DimDate"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_AzureSynapse",
								"type": "DatasetReference"
							},
							"name": "DimDateDest"
						}
					],
					"transformations": [
						{
							"name": "AlterRow1"
						},
						{
							"name": "Exists"
						}
					],
					"script": "source(output(\n\t\tDateKey as integer,\n\t\tFullDate as date,\n\t\tisWeekDay as boolean,\n\t\tDayOfWeek as integer,\n\t\tDayOfMonth as integer,\n\t\tDayOfQuarter as integer,\n\t\tDayOfYear as integer,\n\t\tDayName as string,\n\t\tWeekOfYear as integer,\n\t\tWeekName as string,\n\t\tMonthOfYear as integer,\n\t\tMonthName as string,\n\t\tCalendarQuarter as integer,\n\t\tCalendarQuarterName as string,\n\t\tCalendarYear as integer,\n\t\tFiscalMonth as integer,\n\t\tFiscalMonthName as string,\n\t\tFiscalQuarter as integer,\n\t\tFiscalQuarterName as string,\n\t\tFiscalYear as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> StageDate\nsource(output(\n\t\tDateKey as integer,\n\t\tFullDate as date,\n\t\tisWeekDay as boolean,\n\t\tDayOfWeek as integer,\n\t\tDayOfMonth as integer,\n\t\tDayOfQuarter as integer,\n\t\tDayOfYear as integer,\n\t\tDayName as string,\n\t\tWeekOfYear as integer,\n\t\tWeekName as string,\n\t\tMonthOfYear as integer,\n\t\tMonthName as string,\n\t\tCalendarQuarter as integer,\n\t\tCalendarQuarterName as string,\n\t\tCalendarYear as integer,\n\t\tFiscalMonth as integer,\n\t\tFiscalMonthName as string,\n\t\tFiscalQuarter as integer,\n\t\tFiscalQuarterName as string,\n\t\tFiscalYear as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimDate\nExists alterRow(upsertIf(true())) ~> AlterRow1\nStageDate, DimDate exists(StageDate@DateKey == DimDate@DateKey,\n\tnegate:true,\n\tbroadcast: 'auto')~> Exists\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['DateKey'],\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DimDateDest"
				}
			},
			"dependsOn": []
		}
	]
}