{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-wth-team2"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DS_AzureSynapse')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SchemaName": {
						"type": "string",
						"defaultValue": "STAGE"
					},
					"TableName": {
						"type": "string",
						"defaultValue": "Policies"
					}
				},
				"folder": {
					"name": "wth-team2"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_cosmosdb_datalake')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "wth-team2"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_cosmosdb",
								"type": "DatasetReference"
							},
							"name": "cosmosdb"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_datalake_json",
								"type": "DatasetReference"
							},
							"name": "datalake"
						}
					],
					"transformations": [
						{
							"name": "SourceSystem"
						}
					],
					"script": "source(output(\n\t\tcountryname as string,\n\t\tcountrycode as string,\n\t\tdate as string,\n\t\tc1_school_closing as string,\n\t\tc1_flag as boolean,\n\t\tc2_workplace_closing as string,\n\t\tc2_flag as boolean,\n\t\tc3_cancel_public_events as string,\n\t\tc3_flag as boolean,\n\t\tc4_restrictions_on_gatherings as string,\n\t\tc4_flag as boolean,\n\t\tc5_close_public_transport as string,\n\t\tc5_flag as boolean,\n\t\tc6_stay_at_home_requirements as string,\n\t\tc6_flag as boolean,\n\t\tc7_restrictions_on_internal_movement as string,\n\t\tc7_flag as boolean,\n\t\tc8_international_travel_controls as string,\n\t\te1_income_support as string,\n\t\te1_flag as boolean,\n\t\t{e2_debt/contract_relief} as string,\n\t\te3_fiscal_measures as string,\n\t\te4_international_support as string,\n\t\th1_public_information_campaigns as string,\n\t\th1_flag as boolean,\n\t\th2_testing_policy as string,\n\t\th3_contact_tracing as string,\n\t\th4_emergency_investment_in_healthcare as string,\n\t\th5_investment_in_vaccines as string,\n\t\tm1_wildcard as string,\n\t\tconfirmedcases as string,\n\t\tconfirmeddeaths as string,\n\t\tstringencyindex as string,\n\t\tstringencyindexfordisplay as string,\n\t\tlegacystringencyindex as string,\n\t\tlegacystringencyindexfordisplay as string,\n\t\tiso_country as string,\n\t\tload_date as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'document') ~> cosmosdb\ncosmosdb derive(SourceSystem = 'CosmosDB') ~> SourceSystem\nSourceSystem sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['covid19cosmosdb.json'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> datalake"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_datalake_policies')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "wth-team2"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_datalake_json",
								"type": "DatasetReference"
							},
							"name": "ADLSCosmosDB"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_AzureSynapse",
								"type": "DatasetReference"
							},
							"name": "AzureSynapse"
						}
					],
					"transformations": [],
					"script": "parameters{\n\tContainerName as string ('raw'),\n\tFolderName as string ('CosmosDB_SingleFile')\n}\nsource(output(\n\t\tSourceSystem as string,\n\t\tc1_flag as boolean,\n\t\tc1_school_closing as short,\n\t\tc2_flag as boolean,\n\t\tc2_workplace_closing as short,\n\t\tc3_cancel_public_events as short,\n\t\tc3_flag as boolean,\n\t\tc4_flag as boolean,\n\t\tc4_restrictions_on_gatherings as short,\n\t\tc5_close_public_transport as short,\n\t\tc5_flag as boolean,\n\t\tc6_flag as boolean,\n\t\tc6_stay_at_home_requirements as short,\n\t\tc7_flag as boolean,\n\t\tc7_restrictions_on_internal_movement as short,\n\t\tc8_international_travel_controls as short,\n\t\tconfirmedcases as short,\n\t\tconfirmeddeaths as short,\n\t\tcountrycode as string,\n\t\tcountryname as string,\n\t\tdate as string,\n\t\te1_flag as boolean,\n\t\te1_income_support as short,\n\t\t{e2_debt/contract_relief} as short,\n\t\te3_fiscal_measures as integer,\n\t\te4_international_support as double,\n\t\th1_flag as boolean,\n\t\th1_public_information_campaigns as short,\n\t\th2_testing_policy as short,\n\t\th3_contact_tracing as short,\n\t\th4_emergency_investment_in_healthcare as integer,\n\t\th5_investment_in_vaccines as boolean,\n\t\tiso_country as string,\n\t\tload_date as string,\n\t\tstringencyindex as double,\n\t\tstringencyindexfordisplay as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: true,\n\trowUrlColumn: 'FileName',\n\tdocumentForm: 'documentPerLine',\n\twildcardPaths:[($FolderName)]) ~> ADLSCosmosDB\nADLSCosmosDB sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> AzureSynapse"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AzureSynapse')]"
			]
		}
	]
}