{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-wth-team2"
		},
		"LS_AzureSynapseAnalytics_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_AzureSynapseAnalytics'"
		},
		"LS_CosmosDb_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_CosmosDb'"
		},
		"LS_SQLAzure_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_SQLAzure'"
		},
		"LS_SqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_SqlServer'"
		},
		"LS_AzureDataLakeStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://covid19yjqwgbkvikf6e.dfs.core.windows.net"
		},
		"LS_AzureKeyVault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://HackTeam2KeyVault.vault.azure.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/LS_AzureDataLakeStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_AzureDataLakeStorage_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AzureSynapseAnalytics')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('LS_AzureSynapseAnalytics_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_CosmosDb')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "CosmosDb",
				"typeProperties": {
					"connectionString": "[parameters('LS_CosmosDb_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SQLAzure')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_SQLAzure_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SelfHostedIntegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AzureKeyVault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "this is connection to key vault",
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('LS_AzureKeyVault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AzureSynapse')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SchemaName": {
						"type": "string",
						"defaultValue": "STAGE"
					},
					"TableName": {
						"type": "string",
						"defaultValue": "Policies"
					}
				},
				"folder": {
					"name": "wth-team2"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_DataLake_Parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ContainerName": {
						"type": "string",
						"defaultValue": "raw"
					},
					"FolderName": {
						"type": "string",
						"defaultValue": "SqlAzure"
					}
				},
				"folder": {
					"name": "wth-team2"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().FolderName",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().ContainerName",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQLAzure')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQLAzure",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SchemaName": {
						"type": "string",
						"defaultValue": "dbo"
					},
					"TableName": {
						"type": "string",
						"defaultValue": "covid19_metrics"
					}
				},
				"folder": {
					"name": "wth-team2"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQLAzure')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_cosmosdb')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_CosmosDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "wth-team2"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {
					"type": "object",
					"properties": {
						"countryname": {
							"type": "string"
						},
						"countrycode": {
							"type": "string"
						},
						"date": {
							"type": "string"
						},
						"c1_school_closing": {
							"type": "integer"
						},
						"c1_flag": {
							"type": "boolean"
						},
						"c2_workplace_closing": {
							"type": "integer"
						},
						"c2_flag": {
							"type": "boolean"
						},
						"c3_cancel_public_events": {
							"type": "integer"
						},
						"c3_flag": {
							"type": "boolean"
						},
						"c4_restrictions_on_gatherings": {
							"type": "integer"
						},
						"c4_flag": {
							"type": "boolean"
						},
						"c5_close_public_transport": {
							"type": "integer"
						},
						"c5_flag": {
							"type": "boolean"
						},
						"c6_stay_at_home_requirements": {
							"type": "integer"
						},
						"c6_flag": {
							"type": "boolean"
						},
						"c7_restrictions_on_internal_movement": {
							"type": "integer"
						},
						"c7_flag": {
							"type": "boolean"
						},
						"c8_international_travel_controls": {
							"type": "integer"
						},
						"e1_income_support": {
							"type": "integer"
						},
						"e1_flag": {
							"type": "boolean"
						},
						"e2_debt/contract_relief": {
							"type": "integer"
						},
						"e3_fiscal_measures": {
							"type": "integer"
						},
						"e4_international_support": {
							"type": "integer"
						},
						"h1_public_information_campaigns": {
							"type": "integer"
						},
						"h1_flag": {
							"type": "boolean"
						},
						"h2_testing_policy": {
							"type": "integer"
						},
						"h3_contact_tracing": {
							"type": "integer"
						},
						"h4_emergency_investment_in_healthcare": {
							"type": "integer"
						},
						"h5_investment_in_vaccines": {
							"type": "integer"
						},
						"m1_wildcard": {
							"type": "null"
						},
						"confirmedcases": {
							"type": "null"
						},
						"confirmeddeaths": {
							"type": "null"
						},
						"stringencyindex": {
							"type": "integer"
						},
						"stringencyindexfordisplay": {
							"type": "integer"
						},
						"legacystringencyindex": {
							"type": "null"
						},
						"legacystringencyindexfordisplay": {
							"type": "null"
						},
						"iso_country": {
							"type": "string"
						},
						"load_date": {
							"type": "string"
						}
					}
				},
				"typeProperties": {
					"collectionName": "covidpolicy"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_CosmosDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_datalake_json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Containername": {
						"type": "string"
					},
					"foldername": {
						"type": "string"
					}
				},
				"folder": {
					"name": "wth-team2"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().foldername",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().Containername",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SqlServer')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('LS_SqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "SelfHostedIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SelfHostedIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pipeline_Load_SqlAzure')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.TableList",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"additionalColumns": [
												{
													"name": "SourceSystem",
													"value": {
														"value": "@item().Name",
														"type": "Expression"
													}
												}
											],
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_SQLAzure",
											"type": "DatasetReference",
											"parameters": {
												"SchemaName": {
													"value": "@item().SchemaName",
													"type": "Expression"
												},
												"TableName": {
													"value": "@item().TableName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_DataLake_Parquet",
											"type": "DatasetReference",
											"parameters": {
												"ContainerName": {
													"value": "@item().ContainerName",
													"type": "Expression"
												},
												"FolderName": {
													"value": "@concat(item().FolderName,'/',item().TableName)",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"TableList": {
						"type": "array"
					}
				},
				"folder": {
					"name": "wth-team2"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SQLAzure')]",
				"[concat(variables('factoryId'), '/datasets/DS_DataLake_Parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_Load_Cosmos')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copy cosmosbd",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "CosmosDbSqlApiSource",
								"additionalColumns": [
									{
										"name": "Sourcesystem",
										"value": "cosmosdb"
									}
								],
								"preferredRegions": []
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['countryname']"
										},
										"sink": {
											"name": "countryname",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['countrycode']"
										},
										"sink": {
											"name": "countrycode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['date']"
										},
										"sink": {
											"name": "date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['c1_school_closing']"
										},
										"sink": {
											"name": "c1_school_closing",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['c1_flag']"
										},
										"sink": {
											"name": "c1_flag",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['c2_workplace_closing']"
										},
										"sink": {
											"name": "c2_workplace_closing",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['c2_flag']"
										},
										"sink": {
											"name": "c2_flag",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['c3_cancel_public_events']"
										},
										"sink": {
											"name": "c3_cancel_public_events",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['c3_flag']"
										},
										"sink": {
											"name": "c3_flag",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['c4_restrictions_on_gatherings']"
										},
										"sink": {
											"name": "c4_restrictions_on_gatherings",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['c4_flag']"
										},
										"sink": {
											"name": "c4_flag",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['c5_close_public_transport']"
										},
										"sink": {
											"name": "c5_close_public_transport",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['c5_flag']"
										},
										"sink": {
											"name": "c5_flag",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['c6_stay_at_home_requirements']"
										},
										"sink": {
											"name": "c6_stay_at_home_requirements",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['c6_flag']"
										},
										"sink": {
											"name": "c6_flag",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['c7_restrictions_on_internal_movement']"
										},
										"sink": {
											"name": "c7_restrictions_on_internal_movement",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['c7_flag']"
										},
										"sink": {
											"name": "c7_flag",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['c8_international_travel_controls']"
										},
										"sink": {
											"name": "c8_international_travel_controls",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['e1_income_support']"
										},
										"sink": {
											"name": "e1_income_support",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['e1_flag']"
										},
										"sink": {
											"name": "e1_flag",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['e2_debt/contract_relief']"
										},
										"sink": {
											"name": "e2_debt/contract_relief",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['e3_fiscal_measures']"
										},
										"sink": {
											"name": "e3_fiscal_measures",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['e4_international_support']"
										},
										"sink": {
											"name": "e4_international_support",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['h1_public_information_campaigns']"
										},
										"sink": {
											"name": "h1_public_information_campaigns",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['h1_flag']"
										},
										"sink": {
											"name": "h1_flag"
										}
									},
									{
										"source": {
											"path": "$['h2_testing_policy']"
										},
										"sink": {
											"name": "h2_testing_policy"
										}
									},
									{
										"source": {
											"path": "$['h3_contact_tracing']"
										},
										"sink": {
											"name": "h3_contact_tracing"
										}
									},
									{
										"source": {
											"path": "$['h4_emergency_investment_in_healthcare']"
										},
										"sink": {
											"name": "h4_emergency_investment_in_healthcare"
										}
									},
									{
										"source": {
											"path": "$['h5_investment_in_vaccines']"
										},
										"sink": {
											"name": "h5_investment_in_vaccines"
										}
									},
									{
										"source": {
											"path": "$['m1_wildcard']"
										},
										"sink": {
											"name": "m1_wildcard"
										}
									},
									{
										"source": {
											"path": "$['confirmedcases']"
										},
										"sink": {
											"name": "confirmedcases"
										}
									},
									{
										"source": {
											"path": "$['confirmeddeaths']"
										},
										"sink": {
											"name": "confirmeddeaths"
										}
									},
									{
										"source": {
											"path": "$['stringencyindex']"
										},
										"sink": {
											"name": "stringencyindex"
										}
									},
									{
										"source": {
											"path": "$['stringencyindexfordisplay']"
										},
										"sink": {
											"name": "stringencyindexfordisplay"
										}
									},
									{
										"source": {
											"path": "$['legacystringencyindex']"
										},
										"sink": {
											"name": "legacystringencyindex"
										}
									},
									{
										"source": {
											"path": "$['legacystringencyindexfordisplay']"
										},
										"sink": {
											"name": "legacystringencyindexfordisplay"
										}
									},
									{
										"source": {
											"path": "$['iso_country']"
										},
										"sink": {
											"name": "iso_country"
										}
									},
									{
										"source": {
											"path": "$['load_date']"
										},
										"sink": {
											"name": "load_date"
										}
									},
									{
										"source": {
											"path": "$['id']"
										},
										"sink": {
											"name": "id"
										}
									},
									{
										"source": {
											"path": "$['_rid']"
										},
										"sink": {
											"name": "_rid"
										}
									},
									{
										"source": {
											"path": "$['_self']"
										},
										"sink": {
											"name": "_self"
										}
									},
									{
										"source": {
											"path": "$['_etag']"
										},
										"sink": {
											"name": "_etag"
										}
									},
									{
										"source": {
											"path": "$['_attachments']"
										},
										"sink": {
											"name": "_attachments"
										}
									},
									{
										"source": {
											"path": "$['_ts']"
										},
										"sink": {
											"name": "_ts"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "ds_cosmosdb",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_datalake_json",
								"type": "DatasetReference",
								"parameters": {
									"Containername": {
										"value": "@pipeline().parameters.containername",
										"type": "Expression"
									},
									"foldername": {
										"value": "@pipeline().parameters.foldername",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"parameters": {
					"containername": {
						"type": "string"
					},
					"foldername": {
						"type": "string"
					}
				},
				"folder": {
					"name": "wth-team2"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_cosmosdb')]",
				"[concat(variables('factoryId'), '/datasets/ds_datalake_json')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_Load_Cosmos_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.TableList",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "copy cosmosbd",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "CosmosDbSqlApiSource",
											"additionalColumns": [
												{
													"name": "Sourcesystem",
													"value": {
														"value": "@item().Name",
														"type": "Expression"
													}
												}
											],
											"preferredRegions": []
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false,
										"validateDataConsistency": false
									},
									"inputs": [
										{
											"referenceName": "ds_cosmosdb",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_datalake_json",
											"type": "DatasetReference",
											"parameters": {
												"Containername": {
													"value": "@item().ContainerName",
													"type": "Expression"
												},
												"foldername": {
													"value": "@item().FolderName",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"TableList": {
						"type": "array"
					}
				},
				"folder": {
					"name": "wth-team2"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_cosmosdb')]",
				"[concat(variables('factoryId'), '/datasets/ds_datalake_json')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_Load_via_Polybase')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.FolderName,'/',pipeline().parameters.TableName)",
										"type": "Expression"
									},
									"wildcardFileName": "*.parquet",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "LS_AzureDataLakeStorage",
									"type": "LinkedServiceReference"
								},
								"path": "raw/Polybase"
							}
						},
						"inputs": [
							{
								"referenceName": "DS_DataLake_Parquet",
								"type": "DatasetReference",
								"parameters": {
									"ContainerName": {
										"value": "@pipeline().parameters.ContainerName",
										"type": "Expression"
									},
									"FolderName": {
										"value": "@concat(pipeline().parameters.FolderName,'/',pipeline().parameters.TableName)",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AzureSynapse",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": {
										"value": "@pipeline().parameters.SchemaName",
										"type": "Expression"
									},
									"TableName": {
										"value": "@pipeline().parameters.TableName",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"parameters": {
					"SchemaName": {
						"type": "string",
						"defaultValue": "STAGE"
					},
					"TableName": {
						"type": "string",
						"defaultValue": "SQLAzure_Country_Polybase"
					},
					"ContainerName": {
						"type": "string",
						"defaultValue": "raw"
					},
					"FolderName": {
						"type": "string",
						"defaultValue": "SqlAzure"
					}
				},
				"folder": {
					"name": "wth-team2"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_DataLake_Parquet')]",
				"[concat(variables('factoryId'), '/datasets/DS_AzureSynapse')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SqlServerVM')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SqlServer",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SchemaName": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "wth-team2"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_cosmosdb_datalake')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "wth-team2"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_cosmosdb",
								"type": "DatasetReference"
							},
							"name": "cosmosdb"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_datalake_json",
								"type": "DatasetReference"
							},
							"name": "datalake"
						}
					],
					"transformations": [
						{
							"name": "SourceSystem"
						}
					],
					"script": "source(output(\n\t\tcountryname as string,\n\t\tcountrycode as string,\n\t\tdate as string,\n\t\tc1_school_closing as string,\n\t\tc1_flag as boolean,\n\t\tc2_workplace_closing as string,\n\t\tc2_flag as boolean,\n\t\tc3_cancel_public_events as string,\n\t\tc3_flag as boolean,\n\t\tc4_restrictions_on_gatherings as string,\n\t\tc4_flag as boolean,\n\t\tc5_close_public_transport as string,\n\t\tc5_flag as boolean,\n\t\tc6_stay_at_home_requirements as string,\n\t\tc6_flag as boolean,\n\t\tc7_restrictions_on_internal_movement as string,\n\t\tc7_flag as boolean,\n\t\tc8_international_travel_controls as string,\n\t\te1_income_support as string,\n\t\te1_flag as boolean,\n\t\t{e2_debt/contract_relief} as string,\n\t\te3_fiscal_measures as string,\n\t\te4_international_support as string,\n\t\th1_public_information_campaigns as string,\n\t\th1_flag as boolean,\n\t\th2_testing_policy as string,\n\t\th3_contact_tracing as string,\n\t\th4_emergency_investment_in_healthcare as string,\n\t\th5_investment_in_vaccines as string,\n\t\tm1_wildcard as string,\n\t\tconfirmedcases as string,\n\t\tconfirmeddeaths as string,\n\t\tstringencyindex as string,\n\t\tstringencyindexfordisplay as string,\n\t\tlegacystringencyindex as string,\n\t\tlegacystringencyindexfordisplay as string,\n\t\tiso_country as string,\n\t\tload_date as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'document') ~> cosmosdb\ncosmosdb derive(SourceSystem = 'CosmosDB') ~> SourceSystem\nSourceSystem sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['covid19cosmosdb.json'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> datalake"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_cosmosdb')]",
				"[concat(variables('factoryId'), '/datasets/ds_datalake_json')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_datalake_policies')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "wth-team2"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_datalake_json",
								"type": "DatasetReference"
							},
							"name": "ADLSCosmosDB"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_AzureSynapse",
								"type": "DatasetReference"
							},
							"name": "AzureSynapse"
						}
					],
					"transformations": [],
					"script": "parameters{\n\tContainerName as string ('raw'),\n\tFolderName as string ('CosmosDB_SingleFile')\n}\nsource(output(\n\t\tSourceSystem as string,\n\t\tc1_flag as boolean,\n\t\tc1_school_closing as short,\n\t\tc2_flag as boolean,\n\t\tc2_workplace_closing as short,\n\t\tc3_cancel_public_events as short,\n\t\tc3_flag as boolean,\n\t\tc4_flag as boolean,\n\t\tc4_restrictions_on_gatherings as short,\n\t\tc5_close_public_transport as short,\n\t\tc5_flag as boolean,\n\t\tc6_flag as boolean,\n\t\tc6_stay_at_home_requirements as short,\n\t\tc7_flag as boolean,\n\t\tc7_restrictions_on_internal_movement as short,\n\t\tc8_international_travel_controls as short,\n\t\tconfirmedcases as short,\n\t\tconfirmeddeaths as short,\n\t\tcountrycode as string,\n\t\tcountryname as string,\n\t\tdate as string,\n\t\te1_flag as boolean,\n\t\te1_income_support as short,\n\t\t{e2_debt/contract_relief} as short,\n\t\te3_fiscal_measures as integer,\n\t\te4_international_support as double,\n\t\th1_flag as boolean,\n\t\th1_public_information_campaigns as short,\n\t\th2_testing_policy as short,\n\t\th3_contact_tracing as short,\n\t\th4_emergency_investment_in_healthcare as integer,\n\t\th5_investment_in_vaccines as boolean,\n\t\tiso_country as string,\n\t\tload_date as string,\n\t\tstringencyindex as double,\n\t\tstringencyindexfordisplay as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: true,\n\tmoveFiles: [($FolderName),('Archive/' + $FolderName)],\n\trowUrlColumn: 'FileName',\n\tdocumentForm: 'documentPerLine',\n\twildcardPaths:[($FolderName)]) ~> ADLSCosmosDB\nADLSCosmosDB sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> AzureSynapse"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_datalake_json')]",
				"[concat(variables('factoryId'), '/datasets/DS_AzureSynapse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pipeline_Load_SqlVM')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.TableList",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "SourceSystem",
													"value": {
														"value": "@item().Name",
														"type": "Expression"
													}
												}
											],
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_SqlServerVM",
											"type": "DatasetReference",
											"parameters": {
												"SchemaName": {
													"value": "@item().SchemaName",
													"type": "Expression"
												},
												"TableName": {
													"value": "@item().TableName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_DataLake_Parquet",
											"type": "DatasetReference",
											"parameters": {
												"ContainerName": {
													"value": "@item().ContainerName",
													"type": "Expression"
												},
												"FolderName": {
													"value": "@concat(item().FolderName,'/',item().TableName)",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"TableList": {
						"type": "array"
					},
					"SoureSystem": {
						"type": "string"
					}
				},
				"folder": {
					"name": "wth-team2"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SqlServerVM')]",
				"[concat(variables('factoryId'), '/datasets/DS_DataLake_Parquet')]"
			]
		}
	]
}